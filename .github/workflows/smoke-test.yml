name: Smoke Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  smoke-test-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20, 24]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        
    - name: Install dependencies
      run: yarn install --immutable
      
    - name: Build package
      run: yarn build
      
    - name: Pack package
      run: yarn pack
      
    - name: Install packed package globally
      run: |
        PACKAGE_FILE=$(ls *.tgz)
        npm install -g "$PACKAGE_FILE"
        
    - name: Test binary execution
      run: |
        # Test that the binary starts successfully
        echo "Testing happy --help..."
        timeout 30s happy --help || {
          echo "Error: happy --help failed or timed out"
          exit 1
        }
        
        echo "Testing happy --version..."
        timeout 10s happy --version || {
          echo "Error: happy --version failed or timed out"
          exit 1
        }
        
        echo "✅ Smoke test passed on Linux!"

  smoke-test-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [20, 24]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        
    - name: Install dependencies
      run: yarn install --immutable
      
    - name: Build package
      run: yarn build
      
    - name: Pack package
      run: yarn pack
      
    - name: Install packed package globally
      shell: cmd
      run: |
        for %%f in (*.tgz) do npm install -g "%%f"
        
    - name: Test binary execution
      shell: cmd
      run: |
        rem Get npm global prefix and add to PATH
        for /f "tokens=*" %%i in ('npm config get prefix') do set NPM_PREFIX=%%i
        set PATH=%PATH%;%NPM_PREFIX%
        echo Current PATH: %PATH%
        
        echo Testing happy --help...
        happy --help
        if errorlevel 1 (
          echo Error: happy --help failed
          exit /b 1
        )
        
        echo Testing happy --version...
        happy --version
        if errorlevel 1 (
          echo Error: happy --version failed
          exit /b 1
        )
        
        echo ✅ Smoke test passed on Windows!

# We don't need a smoke test for macOS because most contributors are developing on macOS.
